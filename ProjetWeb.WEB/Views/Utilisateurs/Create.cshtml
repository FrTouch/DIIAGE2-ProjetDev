@model ProjetWeb.Model.UtilisateurModel

@{
    ViewBag.Title = "Create";
}

<h2>Création d'un Utilisateur</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Utilisateur</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group" style="display:none">
            @Html.LabelFor(model => model.id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.id, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="display:none">
            @Html.LabelFor(model => model.profil_id, "profil_id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextArea("profil_id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.profil_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.profil_nom, "Type Utilisateur", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{List<SelectListItem>
                    listItems = new List<SelectListItem>();
                    listItems.Add(new SelectListItem
                    {
                        Text = "Administrateur",
                        Value = "1"
                    });
                    listItems.Add(new SelectListItem
                    {
                        Text = "Lecteur",
                        Value = "2"
                    });
                    listItems.Add(new SelectListItem
                    {
                        Text = "Utilisateur",
                        Value = "3"
                    });
                }

                @Html.DropDownListFor(model => model.profil_id, new SelectList(listItems), "Sélectionner le type de compte")
                @*@Html.EditorFor(model => model.profil_nom)*@
                @Html.ValidationMessageFor(model => model.profil_nom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nom, "Nom", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.prenom, "Prénom", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.prenom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.prenom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.mail, "Mail", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.mail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.mail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.password, "Mot de passe", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group">
                @Html.LabelFor(model => model.password, "Mot de passe", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group" style="display:none">
            @Html.LabelFor(model => model.last_login, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.last_login, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.last_login, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="display:none">
            @Html.LabelFor(model => model.deconnexion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.deconnexion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.deconnexion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="display:none">
            @Html.LabelFor(model => model.purge, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.purge)
                    @Html.ValidationMessageFor(model => model.purge, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Valider" class="btn btn-success" />
            </div>
        </div>
    </div>
                    }

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
